#!/usr/bin/env python
# coding: utf-8

# In[20]:


from androguard.misc import AnalyzeAPK
import pandas as pd
import os, sys
import numpy as np
import matplotlib.pyplot as plt
get_ipython().run_line_magic('matplotlib', 'inline')
from sklearn.decomposition import PCA
from sklearn.model_selection import KFold
from sklearn.metrics import precision_score,recall_score,f1_score, roc_curve, accuracy_score
from sklearn.svm import SVC
from sklearn.neighbors import KNeighborsClassifier as KNN
from sklearn.naive_bayes import GaussianNB as GNB
from sklearn.ensemble import VotingClassifier as VEL
from keras.models import Sequential
from keras.layers import Dense
from keras.models import Model
from keras.callbacks import EarlyStopping
from keras.callbacks import ModelCheckpoint
import keras
import warnings
import time
warnings.filterwarnings("ignore")


# In[2]:


malwares = [f for f in os.listdir(r'C:/Users/user/Desktop/Materials/Security/Assigment/Malware') if f.endswith('.apk')]
goodwares = [f for f in os.listdir(r'C:/Users/user/Desktop/Materials/Security/Assigment/Goodware') if f.endswith('.apk')]


# In[3]:


begin = time.time()
permissions = []
for i in malwares:
    try:
        x, xx, xxx = AnalyzeAPK(i)
        p = x.get_permissions()
        permissions.append(p)
    except:
        pass
all_permissions = []
for sub_p in permissions:
    for item in sub_p:
        all_permissions.append(item)
columns= list(dict.fromkeys(all_permissions))
rows = []
for u in permissions:
    l= []
    for uu in columns:
        if uu in u:
            l.append(1)
        else:
            l.append(0)
    rows.append(l)
android_m= pd.DataFrame(rows, columns= columns)
android_m["type"]= "malware"
end = time.time()
print(end-begin)


# In[4]:


android_m


# In[5]:


begin = time.time()
permissions_ = []
for i in goodwares:
    try:
        x, xx, xxx = AnalyzeAPK(i)
        p = x.get_permissions()
        permissions_.append(p)
    except:
        pass
all_permissions_ = []
for sub_p in permissions_:
    for item in sub_p:
        all_permissions_.append(item)
columns_= list(dict.fromkeys(all_permissions_))
rows_ = []
for u in permissions_:
    l= []
    for uu in columns_:
        if uu in u:
            l.append(1)
        else:
            l.append(0)
    rows_.append(l)
android_g= pd.DataFrame(rows_, columns= columns_)
android_g["type"]= "goodware"
end = time.time()
print(end-begin)


# In[6]:


android_g


# In[7]:


android_3 = android_g.append(android_m, ignore_index = True)
android_2 = android_3.fillna(0)
target = android_2['type']
target = target.replace('malware', 0)
target = target.replace('goodware', 1)
target = target.astype(float)
features = android_2.drop(columns = ['type'])
features = features.astype(float)
android_1 = features
o = []
o_1 = android_1.columns
for o_2 in o_1:
    o_3 = o_2.lower()
    o_4 = o_3.split(".")
    if "permission" not in o_4:
        o.append(o_2)
android_0 = android_1.drop(columns = o)
android_0['type'] = target
android = android_0.sample(frac = 1).reset_index(drop=True)


# In[13]:


android


# In[8]:


android.to_csv("Android permissions dataset.csv")


# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:




